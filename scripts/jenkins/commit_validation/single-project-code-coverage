#!/bin/bash
#
# Common script run by various Jenkins builds.
#
# Builds Couchbase with code coverage enabled and then all the unit
# tests in the specified project.

if [ -z "$PROJECT" ]; then
    echo "Error: Required environment variable 'PROJECT' not set."
    exit 3
fi

# Optional env vars - how many jobs to run in parallel by default?
PARALLELISM="${PARALLELISM:-8}"
TEST_PARALLELISM="${TEST_PARALLELISM:-${PARALLELISM}}"

BASEDIR=$(cd $(dirname $BASH_SOURCE) && pwd)

source ~jenkins/.bash_profile
set -e

# CCACHE is good - use it if available.
export PATH=/usr/lib/ccache:$PATH

function echo_cmd {
    echo \# "$@"
    "$@"
}

cat <<EOF

============================================
===    environment                       ===
============================================
EOF
ulimit -a
echo ""
env | grep -iv password | grep -iv passwd | sort

cat <<EOF

============================================
===    clean                             ===
============================================
EOF
echo_cmd make clean-xfd-hard

cat <<EOF

============================================
===               Build                  ===
============================================
EOF
echo_cmd make -j${PARALLELISM} EXTRA_CMAKE_OPTIONS="-DCB_CODE_COVERAGE=ON"

cat <<EOF

====================================================
===   Run unit tests with code coverage enabled  ===
====================================================
EOF
pushd build/${PROJECT} 2>&1 > /dev/null

# Reset code coverage counters
echo_cmd make ${PROJECT}-coverage-zero-counters

# -j${TEST_PARALLELISM} : Run tests in parallel.
# -T Test   : Generate XML output file of test results.
echo_cmd make test ARGS="-j${TEST_PARALLELISM} --output-on-failure --no-compress-output -T Test"

# Generate code coverage report in XML format for Jenkins plugin.
echo_cmd make ${PROJECT}-coverage-report-xml

popd 2>&1 > /dev/null
